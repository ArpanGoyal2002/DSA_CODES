import java.io.*;
import java.util.*;

public class Main {
    public static class Pair {
        int i;
        int j;
        String psf;

        Pair() {

        }

        Pair(int i, int j, String psf) {
            this.i = i;
            this.j = j;
            this.psf = psf;
        }
    }

    public static void knapsack(int n, int[] wt, int[] cap, int m) {
        int[][] dp = new int[n + 1][m + 1];
        for (int i = 1; i < n + 1; i++) {
            for (int j = 1; j < m + 1; j++) {

                // Including
                int ex = 0;
                if (i - 1 >= 0 && j - wt[i - 1] >= 0) {
                    ex = dp[i - 1][j - wt[i - 1]] + cap[i - 1];
                }

                // Excluding
                int inc = 0;
                if (i - 1 >= 0) {
                    inc = dp[i - 1][j];
                }
                dp[i][j] = Math.max(ex, inc);
            }
        }
        System.out.println(dp[n][m]);
        print(dp, wt, cap, n, m);
    }

    public static void print(int[][] dp, int[] wt, int[] cap, int n, int m) {
        ArrayDeque<Pair> q = new ArrayDeque<>();
        q.add(new Pair(n, m, ""));
        while (q.size() > 0) {
            Pair tmp = q.remove();
            int i = tmp.i, j = tmp.j;
            if (i == 0 || j == 0) {
                System.out.println(tmp.psf);
                continue;
            }

            // including
            int ex = 0;
            if (i - 1 >= 0 && j - wt[i - 1] >= 0) {
                ex = dp[i - 1][j - wt[i - 1]];
            }

            // excluding
            int inc = 0;
            if (i - 1 >= 0) {
                inc = dp[i - 1][j];
            }

            if (dp[i][j] == inc) {
                q.add(new Pair(i - 1, j, tmp.psf));
            }

            if (i - 1 >= 0 && j - wt[i - 1] >= 0 && dp[i][j] == dp[i - 1][j - wt[i - 1]] + cap[i - 1]) {
                q.add(new Pair(i - 1, j - wt[i - 1], (i - 1) + " " + tmp.psf));
            }
        }
    }

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());

        int[] values = new int[n];
        String str1 = br.readLine();
        for (int i = 0; i < n; i++) {
            values[i] = Integer.parseInt(str1.split(" ")[i]);
        }

        int[] wts = new int[n];
        String str2 = br.readLine();
        for (int i = 0; i < n; i++) {
            wts[i] = Integer.parseInt(str2.split(" ")[i]);
        }

        int cap = Integer.parseInt(br.readLine());

        knapsack(n, wts, values, cap);

    }
}
