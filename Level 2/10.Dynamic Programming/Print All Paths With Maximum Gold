import java.io.*;
import java.util.*;

public class Main {

   private static class Pair {
      String psf;
      int i;
      int j;

      public Pair(String psf, int i, int j) {
         this.psf = psf;
         this.i = i;
         this.j = j;
      }
   }
   
   public static void maxGold(int n, int m, int M[][]){
        int dp[][]=new int[n][m];
        for(int i=m-1;i>=0;i--){
            for(int j=n-1;j>=0;j--){
                if(i==m-1){
                    dp[j][i]=M[j][i];
                    continue;
                }
                int du=0,dd=0,rit=0;
                if(i+1<m){
                    rit=dp[j][i+1];
                }
                if(i+1<m&&j-1>=0){
                    du=dp[j-1][i+1];
                }
                if(j+1<n&&i+1<m){
                    dd=dp[j+1][i+1];
                }
                int max=Math.max(rit,Math.max(dd,du));
                dp[j][i]=M[j][i]+max;
            }
        }
        int max=0,ch=0;
        for(int i=0;i<n;i++){
            int k=Math.max(dp[i][0],max);
            if(k>max){
                ch=i;
                max=k;
            }
        }
        
        System.out.println(max);
        print(dp,M,n,m,ch,max);
    }
    

   public static void print(int[][] dp,int grid[][],int n,int m,int ch,int max){
       ArrayDeque<Pair> q=new ArrayDeque<>();
       for(int i=0;i<n;i++){
            if(max==dp[i][0]){
                // System.out.println(grid[i][0]);
                q.add(new Pair(""+i,i,0));
            }
        }
        // System.out.println(q.size());
        while(q.size()>0){
            Pair tmp=q.remove();
            int i=tmp.i,j=tmp.j;
            if(j==m-1){
                System.out.println(tmp.psf);
                continue;
            }
            int find=dp[i][j]-grid[i][j];
            if(j+1<m&&find==dp[i][j+1]){
                q.add(new Pair(tmp.psf+" "+"d2",i,j+1));
            }
            if(j+1<m&&i-1>=0&&find==dp[i-1][j+1]){
                q.add(new Pair(tmp.psf+" "+"d1",i-1,j+1));
            }
            if(j+1<m&&i+1<n&&find==dp[i+1][j+1]){
                q.add(new Pair(tmp.psf+" "+"d3",i+1,j+1));
            }
        }
   }
   
   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
      int n = Integer.parseInt(br.readLine());
      int m = Integer.parseInt(br.readLine());
      int[][] arr = new int[n][m];

      for (int i = 0; i < n; i++) {
         String str = br.readLine();
         for (int j = 0; j < m; j++) {
            arr[i][j] = Integer.parseInt(str.split(" ")[j]);
         }
      }

      maxGold(n,m,arr);
   }


}