https://leetcode.com/problems/longest-turbulent-subarray/

class Solution {
    public int maxTurbulenceSize(int[] arr) {
        int len=1;
        char ch='.';
        int max=0;
        if(arr.length==1){
            return 1;
        }
        for(int i=1;i<arr.length;i++){
            if(ch=='.'){
                if(arr[i]>arr[i-1]){
                    ch='g';
                    len++;
                }else if(arr[i]<arr[i-1]){
                    ch='s';
                    len++;
                }else{
                    ch='.';
                }
            }else if(ch=='e'){
                // i+=1;
                len=1;
                ch='.';
            }else if(ch=='g'){
                if(arr[i]<arr[i-1]){
                    ch='s';
                    len++;
                }else if(arr[i]>arr[i-1]){
                    len=1;
                    i-=1;
                    ch='.';
                }else{
                    len=1;
                    ch='.';
                }
            }else{
                if(arr[i]>arr[i-1]){
                    ch='g';
                    len++;
                }else if(arr[i]<arr[i-1]){
                    len=1;
                    i-=1;
                    ch='.';
                }else{
                    len=1;
                    ch='.';
                }
            }
            max=Math.max(len,max);
        }
        return max;
    }
}