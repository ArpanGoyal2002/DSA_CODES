class Solution {
            public String largestMultipleOfThree(int[] digits) {
                int sum = 0;
                int n = digits.length;
                String str = "";
                Arrays.sort(digits);
                int k = 0, q = n - 1;
                while (k < q) {
                    int tmp = digits[k];
                    digits[k] = digits[q];
                    digits[q] = tmp;
                    k++;
                    q--;
                }

                for (int i : digits)
                    sum += i;
                if (sum % 3 == 1) {
                    boolean num_mod_contains_1 = false;
                    for (int i = n - 1; i >= 0; i--) {
                        System.out.println(digits[i]);
                        if (digits[i] % 3 == 1) {

                            num_mod_contains_1 = true;

                            digits[i] = -1;
                            break;
                        }
                    }

                    if (!num_mod_contains_1){
                        int count = 0;
                        for (int i = n - 1; i >= 0; i--) {
                            if (digits[i] % 3 == 2) {
                                digits[i] = -1;
                                count += 1;
                                if (count == 2)
                                    break;
                            }
                        }
                        if (count < 2) {
                            return "";
                        }

                    }
               }

                else {
                    boolean num_mod_contains_2 = false;
                    for (int i = n - 1; i >= 0; i--) {
                        if (digits[i] % 3 == 2) {
                            num_mod_contains_2 = true;
                            digits[i] = -1;
                            break;
                        }
                    }

                    if (num_mod_contains_2){
                        int count = 0;
                        for (int i = n - 1; i >= 0; i--) {
                            if (digits[i] % 3 == 1) {
                                digits[i] = -1;
                                count += 1;
                                if (count == 2)
                                    break;
                            }
                        }
                        if (count < 2) {
                            return "";
                        }

                    }
                }
                for (int i = 0; i < n; i++) {
                    if (digits[i] != -1)
                        str = str + digits[i];
                }
                if (str.length() > 0 && str.charAt(0) == '0')
                    return "0";
                return str;
            }
        }