import java.io.*;
import java.util.*;

public class Main {

   static class Pair {
      String psf;
      int i;
      int j;

      public Pair(String psf, int i, int j) {
         this.psf = psf;
         this.i = i;
         this.j = j;
      }
   }
   
   public static void minPathSum(int[][] grid) {
        int row=grid.length,col=grid[0].length;
        int dp[][]=new int[row][col];
        dp[row-1][col-1]=grid[row-1][col-1];
        for(int i=row-1;i>=0;i--){
            for(int j=col-1;j>=0;j--){
                if(j==col-1&&i+1<row){
                    dp[i][j]=grid[i][j]+dp[i+1][j];
                }else if(i==row-1&&j+1<col){
                    dp[i][j]=grid[i][j]+dp[i][j+1];
                }else{
                    int cost=grid[i][j];
                    int rht=0;
                    if(j+1<col){
                        rht=dp[i][j+1];
                    }
                    int down=0;
                    if(i+1<row)down=dp[i+1][j];
                    int min=Math.min(rht,down);
                    dp[i][j]=min+cost;
                }
            }
        }
        System.out.println(dp[0][0]);
        print(dp,grid);
    }
    
    public static void print(int[][] dp,int[][] grid){
        ArrayDeque<Pair> q=new ArrayDeque<>();
        Pair frst=new Pair("",0,0);
        int row=grid.length,col=grid[0].length;
        q.add(frst);
        while(q.size()>0){
            Pair tmp=q.remove();
            // System.out.println("a"+tmp.psf);
            int i=tmp.i,j=tmp.j;
            if(i==row-1&&j==col-1){
                System.out.println(tmp.psf);
                continue;
            }
            
            int cost=dp[i][j]-grid[i][j];
            if(i+1<row){
                if(cost==dp[i+1][j]){
                    q.add(new Pair(tmp.psf+"V",i+1,j));
                }
            }
            if(j+1<col){
                if(cost==dp[i][j+1]){
                    q.add(new Pair(tmp.psf+"H",i,j+1));
                }
            }
            
        }
    }

   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
      int n = Integer.parseInt(br.readLine());
      int m = Integer.parseInt(br.readLine());
      int[][] arr = new int[n][m];

      for (int i = 0; i < n; i++) {
         String str = br.readLine();
         for (int j = 0; j < m; j++) {
            arr[i][j] = Integer.parseInt(str.split(" ")[j]);
         }
      }

      minPathSum(arr);
      
   }

}